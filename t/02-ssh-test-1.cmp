#	$OpenBSD: sshd_config,v 1.89 2013/02/06 00:20:42 dtucker Exp $

# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# This sshd was compiled with PATH=/usr/bin:/bin:/usr/sbin:/sbin

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

Port <%= node[:foo][:port] %>
AddressFamily <%= node[:foo][:address_family] %>
<% node[:foo][:listen_address].each do |i| %>
ListenAddress <%= i %>
<% end %>

# The default requires explicit activation of protocol 1
Protocol <%= node[:foo][:protocol] %>

# HostKeys
<% node[:foo][:host_key].each do |i| %>
HostKey <%= i %>
<% end %>

# Lifetime and size of ephemeral version 1 server key
KeyRegenerationInterval <%= node[:foo][:key_regeneration_interval] %>
ServerKeyBits <%= node[:foo][:server_key_bits] %>

# Logging
# obsoletes QuietMode and FascistLogging
SyslogFacility <%= node[:foo][:syslog_facility] %>
LogLevel <%= node[:foo][:log_level] %>

# Authentication:

LoginGraceTime <%= node[:foo][:login_grace_time] %>
PermitRootLogin <%= node[:foo][:permit_root_login] %>
StrictModes <%= node[:foo][:strict_modes] %>
MaxAuthTries <%= node[:foo][:max_auth_tries] %>
MaxSessions <%= node[:foo][:max_sessions] %>

RSAAuthentication <%= node[:foo][:rsa_authentication] %>
PubkeyAuthentication <%= node[:foo][:pubkey_authentication] %>

# The default is to check both .ssh/authorized_keys and .ssh/authorized_keys2
# but this is overridden so installations will only check .ssh/authorized_keys
AuthorizedKeysFile	<%= node[:foo][:authorized_keys_file] %>

AuthorizedPrincipalsFile <%= node[:foo][:authorized_principals_file] %>

AuthorizedKeysCommand <%= node[:foo][:authorized_keys_command] %>
AuthorizedKeysCommandUser <%= node[:foo][:authorized_keys_command_user] %>

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
RhostsRSAAuthentication <%= node[:foo][:rhosts_rsa_authentication] %>
# similar for protocol version 2
HostbasedAuthentication <%= node[:foo][:hostbased_authentication] %>
# Change to yes if you don't trust ~/.ssh/known_hosts for
 RhostsRSAAuthentication and HostbasedAuthentication
IgnoreUserKnownHosts <%= node[:foo][:ignore_user_known_hosts] %>
# Don't read the user's ~/.rhosts and ~/.shosts files
IgnoreRhosts <%= node[:foo][:ignore_rhosts] %>

# To disable tunneled clear text passwords, change to no here!
PasswordAuthentication <%= node[:foo][:password_authentication] %>
PermitEmptyPasswords <%= node[:foo][:permit_empty_passwords] %>

# Change to no to disable s/key passwords
ChallengeResponseAuthentication <%= node[:foo][:challenge_response_authentication] %>

# Kerberos options
KerberosAuthentication <%= node[:foo][:kerberos_authentication] %>
KerberosOrLocalPasswd <%= node[:foo][:kerberos_or_local_passwd] %>
KerberosTicketCleanup <%= node[:foo][:kerberos_ticket_cleanup] %>
KerberosGetAFSToken <%= node[:foo][:kerberos_get_afs_token] %>

# GSSAPI options
GSSAPIAuthentication <%= node[:foo][:gssapi_authentication] %>
GSSAPICleanupCredentials <%= node[:foo][:gssapi_cleanup_credentials] %>

# Set this to 'yes' to enable PAM authentication, account processing, 
# and session processing. If this is enabled, PAM authentication will 
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM <%= node[:foo][:use_pam] %>

AllowAgentForwarding <%= node[:foo][:allow_agent_forwarding] %>
AllowTcpForwarding <%= node[:foo][:allow_tcp_forwarding] %>
GatewayPorts <%= node[:foo][:gateway_ports] %>
X11Forwarding <%= node[:foo][:x11_forwarding] %>
X11DisplayOffset <%= node[:foo][:x11_display_offset] %>
X11UseLocalhost <%= node[:foo][:x11_use_localhost] %>
PrintMotd <%= node[:foo][:print_motd] %>
PrintLastLog <%= node[:foo][:print_last_log] %>
TCPKeepAlive <%= node[:foo][:tcp_keep_alive] %>
UseLogin <%= node[:foo][:use_login] %>
UsePrivilegeSeparation <%= node[:foo][:use_privilege_separation] %>
PermitUserEnvironment <%= node[:foo][:permit_user_environment] %>
Compression <%= node[:foo][:compression] %>
ClientAliveInterval <%= node[:foo][:client_alive_interval] %>
ClientAliveCountMax <%= node[:foo][:client_alive_count_max] %>
UseDNS <%= node[:foo][:use_dns] %>
PidFile <%= node[:foo][:pid_file] %>
MaxStartups <%= node[:foo][:max_startups] %>
PermitTunnel <%= node[:foo][:permit_tunnel] %>
ChrootDirectory <%= node[:foo][:chroot_directory] %>
VersionAddendum <%= node[:foo][:version_addendum] %>

# no default banner path
Banner <%= node[:foo][:banner] %>

# override default of no subsystems
Subsystem	sftp	<%= node[:foo][:subsystem][:sftp] %>

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	ForceCommand cvs server
